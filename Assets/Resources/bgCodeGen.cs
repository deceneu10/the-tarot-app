using System;
using System.Collections.Generic;
using BansheeGz.BGDatabase;
using Alias_rifegrt_Localization = Localization;

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

#pragma warning disable 414

public partial class Localization : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new Localization(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new Localization(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaLocalizationSettings _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaLocalizationSettings MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaLocalizationSettings>(new BGId(5079103115060388602UL,4366862900891059588UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name
	{
		get => _name[Index];
		set => _name[Index] = value;
	}
	public List<Locale> Locale => BGCodeGenUtils.GetNested<Locale>(_Locale, Index);
	public Locale current
	{
		get => (Locale) _current[Index];
		set => _current[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5601773293864762948UL, 7794904149425353862UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldNested _ufle12jhs77_Locale;
	public static BansheeGz.BGDatabase.BGFieldNested _Locale => _ufle12jhs77_Locale ?? (_ufle12jhs77_Locale = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldNested>(MetaDefault, new BGId(5035160538340754893UL, 14253729106877244574UL), () => _ufle12jhs77_Locale = null));
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_current;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _current => _ufle12jhs77_current ?? (_ufle12jhs77_current = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationSingle>(MetaDefault, new BGId(5002806739431204148UL, 14820169174600962213UL), () => _ufle12jhs77_current = null));
	private static readonly Localization.Factory _factory0_PFS = new Localization.Factory();
	private static readonly Locale.Factory _factory1_PFS = new Locale.Factory();
	private static readonly Yes_No_Master.Factory _factory2_PFS = new Yes_No_Master.Factory();
	private static readonly YES_NO_Evaluation.Factory _factory3_PFS = new YES_NO_Evaluation.Factory();
	private static readonly TarotDecks.Factory _factory4_PFS = new TarotDecks.Factory();
	private static readonly TarotTypeFlows.Factory _factory5_PFS = new TarotTypeFlows.Factory();
	private static readonly ZodiacRoster.Factory _factory6_PFS = new ZodiacRoster.Factory();
	private static readonly ZodiacLabelsContent.Factory _factory7_PFS = new ZodiacLabelsContent.Factory();
	private static readonly ZodiacMiniRoster.Factory _factory8_PFS = new ZodiacMiniRoster.Factory();
	private static readonly Zodiac_to_Tarot.Factory _factory9_PFS = new Zodiac_to_Tarot.Factory();
	private static readonly AnalyticsButtons.Factory _factory10_PFS = new AnalyticsButtons.Factory();
	private static readonly EducationTarotCards.Factory _factory11_PFS = new EducationTarotCards.Factory();
	private static readonly EDU_Feel_Colors.Factory _factory12_PFS = new EDU_Feel_Colors.Factory();
	private static readonly EDU_Astro_Symbols.Factory _factory13_PFS = new EDU_Astro_Symbols.Factory();
	private static readonly EDU_Elements_Symbols.Factory _factory14_PFS = new EDU_Elements_Symbols.Factory();
	private static readonly EDU_TarotCardsGroup.Factory _factory15_PFS = new EDU_TarotCardsGroup.Factory();
	private Localization() : base(MetaDefault)
	{
	}
	private Localization(BGId id) : base(MetaDefault, id)
	{
	}
	private Localization(BGMetaEntity meta) : base(meta)
	{
	}
	private Localization(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static Localization FindEntity(Predicate<Localization> filter)
	{
		return (Localization) MetaDefault.FindEntity(entity => filter==null || filter((Localization) entity));
	}
	public static List<Localization> FindEntities(Predicate<Localization> filter, List<Localization> result=null, Comparison<Localization> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<Localization> action, Predicate<Localization> filter=null, Comparison<Localization> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((Localization) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((Localization) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((Localization)e1,(Localization)e2));
	}
	public static Localization GetEntity(BGId entityId) => (Localization) MetaDefault.GetEntity(entityId);
	public static Localization GetEntity(int index) => (Localization) MetaDefault[index];
	public static Localization GetEntity(string entityName) => (Localization) MetaDefault.GetEntity(entityName);
	public static Localization NewEntity() => (Localization) MetaDefault.NewEntity();
	public static Localization NewEntity(BGId entityId) => (Localization) MetaDefault.NewEntity(entityId);
	public static Localization NewEntity(Action<Localization> callback)
	{
		return (Localization) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((Localization)entity)));
	}
}

public partial class Locale : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new Locale(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new Locale(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaNested _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaNested MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaNested>(new BGId(4671154531634431227UL,11773987393087283881UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name
	{
		get => _name[Index];
		set => _name[Index] = value;
	}
	public Localization Localization
	{
		get => (Localization) _Localization[Index];
		set => _Localization[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5736452755997324129UL, 10682040172290343304UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Localization;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Localization => _ufle12jhs77_Localization ?? (_ufle12jhs77_Localization = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldRelationSingle>(MetaDefault, new BGId(5106535801275603578UL, 11994983532959485106UL), () => _ufle12jhs77_Localization = null));
	public List<Alias_rifegrt_Localization> RelatedLocalizationListUsingcurrentRelation => BGCodeGenUtils.GetRelatedInbound<Alias_rifegrt_Localization>(Alias_rifegrt_Localization._current, Id);
	private static readonly Localization.Factory _factory0_PFS = new Localization.Factory();
	private static readonly Locale.Factory _factory1_PFS = new Locale.Factory();
	private static readonly Yes_No_Master.Factory _factory2_PFS = new Yes_No_Master.Factory();
	private static readonly YES_NO_Evaluation.Factory _factory3_PFS = new YES_NO_Evaluation.Factory();
	private static readonly TarotDecks.Factory _factory4_PFS = new TarotDecks.Factory();
	private static readonly TarotTypeFlows.Factory _factory5_PFS = new TarotTypeFlows.Factory();
	private static readonly ZodiacRoster.Factory _factory6_PFS = new ZodiacRoster.Factory();
	private static readonly ZodiacLabelsContent.Factory _factory7_PFS = new ZodiacLabelsContent.Factory();
	private static readonly ZodiacMiniRoster.Factory _factory8_PFS = new ZodiacMiniRoster.Factory();
	private static readonly Zodiac_to_Tarot.Factory _factory9_PFS = new Zodiac_to_Tarot.Factory();
	private static readonly AnalyticsButtons.Factory _factory10_PFS = new AnalyticsButtons.Factory();
	private static readonly EducationTarotCards.Factory _factory11_PFS = new EducationTarotCards.Factory();
	private static readonly EDU_Feel_Colors.Factory _factory12_PFS = new EDU_Feel_Colors.Factory();
	private static readonly EDU_Astro_Symbols.Factory _factory13_PFS = new EDU_Astro_Symbols.Factory();
	private static readonly EDU_Elements_Symbols.Factory _factory14_PFS = new EDU_Elements_Symbols.Factory();
	private static readonly EDU_TarotCardsGroup.Factory _factory15_PFS = new EDU_TarotCardsGroup.Factory();
	private Locale() : base(MetaDefault)
	{
	}
	private Locale(BGId id) : base(MetaDefault, id)
	{
	}
	private Locale(BGMetaEntity meta) : base(meta)
	{
	}
	private Locale(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static Locale FindEntity(Predicate<Locale> filter)
	{
		return (Locale) MetaDefault.FindEntity(entity => filter==null || filter((Locale) entity));
	}
	public static List<Locale> FindEntities(Predicate<Locale> filter, List<Locale> result=null, Comparison<Locale> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<Locale> action, Predicate<Locale> filter=null, Comparison<Locale> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((Locale) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((Locale) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((Locale)e1,(Locale)e2));
	}
	public static Locale GetEntity(BGId entityId) => (Locale) MetaDefault.GetEntity(entityId);
	public static Locale GetEntity(int index) => (Locale) MetaDefault[index];
	public static Locale GetEntity(string entityName) => (Locale) MetaDefault.GetEntity(entityName);
	public static Locale NewEntity() => (Locale) MetaDefault.NewEntity();
	public static Locale NewEntity(BGId entityId) => (Locale) MetaDefault.NewEntity(entityId);
	public static Locale NewEntity(Action<Locale> callback)
	{
		return (Locale) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((Locale)entity)));
	}
	public static Locale NewEntity(Localization owner) => (Locale) MetaDefault.NewEntity(owner);
	public static Locale NewEntity(Localization owner, BGId entityId) => (Locale) MetaDefault.NewEntity(owner, entityId);
	public static Locale NewEntity(Localization owner, Action<Locale> callback)
	{
		return (Locale) MetaDefault.NewEntity(owner, new BGMetaEntity.NewEntityContext(entity => callback((Locale)entity)));
	}
}

public partial class Yes_No_Master : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new Yes_No_Master(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new Yes_No_Master(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5760172452568443854UL,5472442676794643613UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name
	{
		get => _name[Index];
		set => _name[Index] = value;
	}
	public System.String Card
	{
		get => _Card[Index];
		set => _Card[Index] = value;
	}
	public System.Int32 CardNo
	{
		get => _CardNo[Index];
		set => _CardNo[Index] = value;
	}
	public System.Int32 Group
	{
		get => _Group[Index];
		set => _Group[Index] = value;
	}
	public System.String Reversed
	{
		get => _Reversed[Index];
		set => _Reversed[Index] = value;
	}
	public System.Single Yes
	{
		get => _Yes[Index];
		set => _Yes[Index] = value;
	}
	public System.Single No
	{
		get => _No[Index];
		set => _No[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5646372450699711488UL, 14786964187694830758UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Card;
	public static BansheeGz.BGDatabase.BGFieldString _Card => _ufle12jhs77_Card ?? (_ufle12jhs77_Card = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5460223048908295818UL, 1506535186276087952UL), () => _ufle12jhs77_Card = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_CardNo;
	public static BansheeGz.BGDatabase.BGFieldInt _CardNo => _ufle12jhs77_CardNo ?? (_ufle12jhs77_CardNo = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5659088793062196160UL, 11415983224057942698UL), () => _ufle12jhs77_CardNo = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Group;
	public static BansheeGz.BGDatabase.BGFieldInt _Group => _ufle12jhs77_Group ?? (_ufle12jhs77_Group = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(4888686856213666910UL, 17157831667492852133UL), () => _ufle12jhs77_Group = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Reversed;
	public static BansheeGz.BGDatabase.BGFieldString _Reversed => _ufle12jhs77_Reversed ?? (_ufle12jhs77_Reversed = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4955584878018627153UL, 5103723847640222125UL), () => _ufle12jhs77_Reversed = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Yes;
	public static BansheeGz.BGDatabase.BGFieldFloat _Yes => _ufle12jhs77_Yes ?? (_ufle12jhs77_Yes = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5540793083828721648UL, 8073100551452570278UL), () => _ufle12jhs77_Yes = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_No;
	public static BansheeGz.BGDatabase.BGFieldFloat _No => _ufle12jhs77_No ?? (_ufle12jhs77_No = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(4897380457210088789UL, 13488052593328809150UL), () => _ufle12jhs77_No = null));
	private static readonly Localization.Factory _factory0_PFS = new Localization.Factory();
	private static readonly Locale.Factory _factory1_PFS = new Locale.Factory();
	private static readonly Yes_No_Master.Factory _factory2_PFS = new Yes_No_Master.Factory();
	private static readonly YES_NO_Evaluation.Factory _factory3_PFS = new YES_NO_Evaluation.Factory();
	private static readonly TarotDecks.Factory _factory4_PFS = new TarotDecks.Factory();
	private static readonly TarotTypeFlows.Factory _factory5_PFS = new TarotTypeFlows.Factory();
	private static readonly ZodiacRoster.Factory _factory6_PFS = new ZodiacRoster.Factory();
	private static readonly ZodiacLabelsContent.Factory _factory7_PFS = new ZodiacLabelsContent.Factory();
	private static readonly ZodiacMiniRoster.Factory _factory8_PFS = new ZodiacMiniRoster.Factory();
	private static readonly Zodiac_to_Tarot.Factory _factory9_PFS = new Zodiac_to_Tarot.Factory();
	private static readonly AnalyticsButtons.Factory _factory10_PFS = new AnalyticsButtons.Factory();
	private static readonly EducationTarotCards.Factory _factory11_PFS = new EducationTarotCards.Factory();
	private static readonly EDU_Feel_Colors.Factory _factory12_PFS = new EDU_Feel_Colors.Factory();
	private static readonly EDU_Astro_Symbols.Factory _factory13_PFS = new EDU_Astro_Symbols.Factory();
	private static readonly EDU_Elements_Symbols.Factory _factory14_PFS = new EDU_Elements_Symbols.Factory();
	private static readonly EDU_TarotCardsGroup.Factory _factory15_PFS = new EDU_TarotCardsGroup.Factory();
	private Yes_No_Master() : base(MetaDefault)
	{
	}
	private Yes_No_Master(BGId id) : base(MetaDefault, id)
	{
	}
	private Yes_No_Master(BGMetaEntity meta) : base(meta)
	{
	}
	private Yes_No_Master(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static Yes_No_Master FindEntity(Predicate<Yes_No_Master> filter)
	{
		return (Yes_No_Master) MetaDefault.FindEntity(entity => filter==null || filter((Yes_No_Master) entity));
	}
	public static List<Yes_No_Master> FindEntities(Predicate<Yes_No_Master> filter, List<Yes_No_Master> result=null, Comparison<Yes_No_Master> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<Yes_No_Master> action, Predicate<Yes_No_Master> filter=null, Comparison<Yes_No_Master> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((Yes_No_Master) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((Yes_No_Master) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((Yes_No_Master)e1,(Yes_No_Master)e2));
	}
	public static Yes_No_Master GetEntity(BGId entityId) => (Yes_No_Master) MetaDefault.GetEntity(entityId);
	public static Yes_No_Master GetEntity(int index) => (Yes_No_Master) MetaDefault[index];
	public static Yes_No_Master GetEntity(string entityName) => (Yes_No_Master) MetaDefault.GetEntity(entityName);
	public static Yes_No_Master NewEntity() => (Yes_No_Master) MetaDefault.NewEntity();
	public static Yes_No_Master NewEntity(BGId entityId) => (Yes_No_Master) MetaDefault.NewEntity(entityId);
	public static Yes_No_Master NewEntity(Action<Yes_No_Master> callback)
	{
		return (Yes_No_Master) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((Yes_No_Master)entity)));
	}
}

public partial class YES_NO_Evaluation : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new YES_NO_Evaluation(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new YES_NO_Evaluation(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5678345914230048803UL,4631957521748007097UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name
	{
		get => _name[Index];
		set => _name[Index] = value;
	}
	public System.String Answer
	{
		get => _Answer[Index];
		set => _Answer[Index] = value;
	}
	public System.String GroupName
	{
		get => _GroupName[Index];
		set => _GroupName[Index] = value;
	}
	public System.String Group
	{
		get => _Group[Index];
		set => _Group[Index] = value;
	}
	public System.Int32 GroupNo
	{
		get => _GroupNo[Index];
		set => _GroupNo[Index] = value;
	}
	public System.Int32 GroupIndex
	{
		get => _GroupIndex[Index];
		set => _GroupIndex[Index] = value;
	}
	public System.Single Min
	{
		get => _Min[Index];
		set => _Min[Index] = value;
	}
	public System.Single Max
	{
		get => _Max[Index];
		set => _Max[Index] = value;
	}
	public System.String AnswerRO
	{
		get => _AnswerRO[Index];
		set => _AnswerRO[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5207581044109142833UL, 6102899708159623824UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Answer;
	public static BansheeGz.BGDatabase.BGFieldString _Answer => _ufle12jhs77_Answer ?? (_ufle12jhs77_Answer = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4913076594760812268UL, 13419282038586692243UL), () => _ufle12jhs77_Answer = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_GroupName;
	public static BansheeGz.BGDatabase.BGFieldString _GroupName => _ufle12jhs77_GroupName ?? (_ufle12jhs77_GroupName = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5434052202164759138UL, 2651227276502074765UL), () => _ufle12jhs77_GroupName = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Group;
	public static BansheeGz.BGDatabase.BGFieldString _Group => _ufle12jhs77_Group ?? (_ufle12jhs77_Group = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4955463858695654634UL, 3348267092519133880UL), () => _ufle12jhs77_Group = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_GroupNo;
	public static BansheeGz.BGDatabase.BGFieldInt _GroupNo => _ufle12jhs77_GroupNo ?? (_ufle12jhs77_GroupNo = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(4818111432234944698UL, 14477202569428001942UL), () => _ufle12jhs77_GroupNo = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_GroupIndex;
	public static BansheeGz.BGDatabase.BGFieldInt _GroupIndex => _ufle12jhs77_GroupIndex ?? (_ufle12jhs77_GroupIndex = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5635106619173155596UL, 907041871026087818UL), () => _ufle12jhs77_GroupIndex = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Min;
	public static BansheeGz.BGDatabase.BGFieldFloat _Min => _ufle12jhs77_Min ?? (_ufle12jhs77_Min = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5448687406201196025UL, 988313163076226463UL), () => _ufle12jhs77_Min = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Max;
	public static BansheeGz.BGDatabase.BGFieldFloat _Max => _ufle12jhs77_Max ?? (_ufle12jhs77_Max = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5540676471043842446UL, 8667547905203700896UL), () => _ufle12jhs77_Max = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_AnswerRO;
	public static BansheeGz.BGDatabase.BGFieldString _AnswerRO => _ufle12jhs77_AnswerRO ?? (_ufle12jhs77_AnswerRO = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4814729191175556861UL, 3862701682160620465UL), () => _ufle12jhs77_AnswerRO = null));
	private static readonly Localization.Factory _factory0_PFS = new Localization.Factory();
	private static readonly Locale.Factory _factory1_PFS = new Locale.Factory();
	private static readonly Yes_No_Master.Factory _factory2_PFS = new Yes_No_Master.Factory();
	private static readonly YES_NO_Evaluation.Factory _factory3_PFS = new YES_NO_Evaluation.Factory();
	private static readonly TarotDecks.Factory _factory4_PFS = new TarotDecks.Factory();
	private static readonly TarotTypeFlows.Factory _factory5_PFS = new TarotTypeFlows.Factory();
	private static readonly ZodiacRoster.Factory _factory6_PFS = new ZodiacRoster.Factory();
	private static readonly ZodiacLabelsContent.Factory _factory7_PFS = new ZodiacLabelsContent.Factory();
	private static readonly ZodiacMiniRoster.Factory _factory8_PFS = new ZodiacMiniRoster.Factory();
	private static readonly Zodiac_to_Tarot.Factory _factory9_PFS = new Zodiac_to_Tarot.Factory();
	private static readonly AnalyticsButtons.Factory _factory10_PFS = new AnalyticsButtons.Factory();
	private static readonly EducationTarotCards.Factory _factory11_PFS = new EducationTarotCards.Factory();
	private static readonly EDU_Feel_Colors.Factory _factory12_PFS = new EDU_Feel_Colors.Factory();
	private static readonly EDU_Astro_Symbols.Factory _factory13_PFS = new EDU_Astro_Symbols.Factory();
	private static readonly EDU_Elements_Symbols.Factory _factory14_PFS = new EDU_Elements_Symbols.Factory();
	private static readonly EDU_TarotCardsGroup.Factory _factory15_PFS = new EDU_TarotCardsGroup.Factory();
	private YES_NO_Evaluation() : base(MetaDefault)
	{
	}
	private YES_NO_Evaluation(BGId id) : base(MetaDefault, id)
	{
	}
	private YES_NO_Evaluation(BGMetaEntity meta) : base(meta)
	{
	}
	private YES_NO_Evaluation(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static YES_NO_Evaluation FindEntity(Predicate<YES_NO_Evaluation> filter)
	{
		return (YES_NO_Evaluation) MetaDefault.FindEntity(entity => filter==null || filter((YES_NO_Evaluation) entity));
	}
	public static List<YES_NO_Evaluation> FindEntities(Predicate<YES_NO_Evaluation> filter, List<YES_NO_Evaluation> result=null, Comparison<YES_NO_Evaluation> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<YES_NO_Evaluation> action, Predicate<YES_NO_Evaluation> filter=null, Comparison<YES_NO_Evaluation> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((YES_NO_Evaluation) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((YES_NO_Evaluation) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((YES_NO_Evaluation)e1,(YES_NO_Evaluation)e2));
	}
	public static YES_NO_Evaluation GetEntity(BGId entityId) => (YES_NO_Evaluation) MetaDefault.GetEntity(entityId);
	public static YES_NO_Evaluation GetEntity(int index) => (YES_NO_Evaluation) MetaDefault[index];
	public static YES_NO_Evaluation GetEntity(string entityName) => (YES_NO_Evaluation) MetaDefault.GetEntity(entityName);
	public static YES_NO_Evaluation NewEntity() => (YES_NO_Evaluation) MetaDefault.NewEntity();
	public static YES_NO_Evaluation NewEntity(BGId entityId) => (YES_NO_Evaluation) MetaDefault.NewEntity(entityId);
	public static YES_NO_Evaluation NewEntity(Action<YES_NO_Evaluation> callback)
	{
		return (YES_NO_Evaluation) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((YES_NO_Evaluation)entity)));
	}
}

public partial class TarotDecks : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new TarotDecks(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new TarotDecks(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4942501018330503789UL,14109744699579586468UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name
	{
		get => _name[Index];
		set => _name[Index] = value;
	}
	public System.String Card
	{
		get => _Card[Index];
		set => _Card[Index] = value;
	}
	public UnityEngine.GameObject Deck1 => _Deck1[Index];
	public System.Int32 No
	{
		get => _No[Index];
		set => _No[Index] = value;
	}
	public UnityEngine.GameObject Deck2 => _Deck2[Index];
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(4654203724637973899UL, 12138143412840551604UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Card;
	public static BansheeGz.BGDatabase.BGFieldString _Card => _ufle12jhs77_Card ?? (_ufle12jhs77_Card = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5262290340373921548UL, 251607155517545639UL), () => _ufle12jhs77_Card = null));
	private static BansheeGz.BGDatabase.BGFieldUnityPrefab _ufle12jhs77_Deck1;
	public static BansheeGz.BGDatabase.BGFieldUnityPrefab _Deck1 => _ufle12jhs77_Deck1 ?? (_ufle12jhs77_Deck1 = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldUnityPrefab>(MetaDefault, new BGId(5474640615959774634UL, 3743476270496729232UL), () => _ufle12jhs77_Deck1 = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_No;
	public static BansheeGz.BGDatabase.BGFieldInt _No => _ufle12jhs77_No ?? (_ufle12jhs77_No = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5435173672476705401UL, 10228782580807646366UL), () => _ufle12jhs77_No = null));
	private static BansheeGz.BGDatabase.BGFieldUnityPrefab _ufle12jhs77_Deck2;
	public static BansheeGz.BGDatabase.BGFieldUnityPrefab _Deck2 => _ufle12jhs77_Deck2 ?? (_ufle12jhs77_Deck2 = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldUnityPrefab>(MetaDefault, new BGId(5727559241943958944UL, 6681843255012287382UL), () => _ufle12jhs77_Deck2 = null));
	private static readonly Localization.Factory _factory0_PFS = new Localization.Factory();
	private static readonly Locale.Factory _factory1_PFS = new Locale.Factory();
	private static readonly Yes_No_Master.Factory _factory2_PFS = new Yes_No_Master.Factory();
	private static readonly YES_NO_Evaluation.Factory _factory3_PFS = new YES_NO_Evaluation.Factory();
	private static readonly TarotDecks.Factory _factory4_PFS = new TarotDecks.Factory();
	private static readonly TarotTypeFlows.Factory _factory5_PFS = new TarotTypeFlows.Factory();
	private static readonly ZodiacRoster.Factory _factory6_PFS = new ZodiacRoster.Factory();
	private static readonly ZodiacLabelsContent.Factory _factory7_PFS = new ZodiacLabelsContent.Factory();
	private static readonly ZodiacMiniRoster.Factory _factory8_PFS = new ZodiacMiniRoster.Factory();
	private static readonly Zodiac_to_Tarot.Factory _factory9_PFS = new Zodiac_to_Tarot.Factory();
	private static readonly AnalyticsButtons.Factory _factory10_PFS = new AnalyticsButtons.Factory();
	private static readonly EducationTarotCards.Factory _factory11_PFS = new EducationTarotCards.Factory();
	private static readonly EDU_Feel_Colors.Factory _factory12_PFS = new EDU_Feel_Colors.Factory();
	private static readonly EDU_Astro_Symbols.Factory _factory13_PFS = new EDU_Astro_Symbols.Factory();
	private static readonly EDU_Elements_Symbols.Factory _factory14_PFS = new EDU_Elements_Symbols.Factory();
	private static readonly EDU_TarotCardsGroup.Factory _factory15_PFS = new EDU_TarotCardsGroup.Factory();
	private TarotDecks() : base(MetaDefault)
	{
	}
	private TarotDecks(BGId id) : base(MetaDefault, id)
	{
	}
	private TarotDecks(BGMetaEntity meta) : base(meta)
	{
	}
	private TarotDecks(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TarotDecks FindEntity(Predicate<TarotDecks> filter)
	{
		return (TarotDecks) MetaDefault.FindEntity(entity => filter==null || filter((TarotDecks) entity));
	}
	public static List<TarotDecks> FindEntities(Predicate<TarotDecks> filter, List<TarotDecks> result=null, Comparison<TarotDecks> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<TarotDecks> action, Predicate<TarotDecks> filter=null, Comparison<TarotDecks> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TarotDecks) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TarotDecks) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TarotDecks)e1,(TarotDecks)e2));
	}
	public static TarotDecks GetEntity(BGId entityId) => (TarotDecks) MetaDefault.GetEntity(entityId);
	public static TarotDecks GetEntity(int index) => (TarotDecks) MetaDefault[index];
	public static TarotDecks GetEntity(string entityName) => (TarotDecks) MetaDefault.GetEntity(entityName);
	public static TarotDecks NewEntity() => (TarotDecks) MetaDefault.NewEntity();
	public static TarotDecks NewEntity(BGId entityId) => (TarotDecks) MetaDefault.NewEntity(entityId);
	public static TarotDecks NewEntity(Action<TarotDecks> callback)
	{
		return (TarotDecks) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((TarotDecks)entity)));
	}
}

public partial class TarotTypeFlows : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new TarotTypeFlows(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new TarotTypeFlows(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5006528007605504919UL,9788669992611985562UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name
	{
		get => _name[Index];
		set => _name[Index] = value;
	}
	public System.Int32 Step
	{
		get => _Step[Index];
		set => _Step[Index] = value;
	}
	public System.String Type
	{
		get => _Type[Index];
		set => _Type[Index] = value;
	}
	public System.String Labels
	{
		get => _Labels[Index];
		set => _Labels[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(4995909024407851596UL, 7010349146394101674UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Step;
	public static BansheeGz.BGDatabase.BGFieldInt _Step => _ufle12jhs77_Step ?? (_ufle12jhs77_Step = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5001042146552343419UL, 6284446973477922994UL), () => _ufle12jhs77_Step = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Type;
	public static BansheeGz.BGDatabase.BGFieldString _Type => _ufle12jhs77_Type ?? (_ufle12jhs77_Type = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4824451923561144568UL, 17009802408845437578UL), () => _ufle12jhs77_Type = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Labels;
	public static BansheeGz.BGDatabase.BGFieldString _Labels => _ufle12jhs77_Labels ?? (_ufle12jhs77_Labels = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5543838482176103829UL, 14448355596288455311UL), () => _ufle12jhs77_Labels = null));
	private static readonly Localization.Factory _factory0_PFS = new Localization.Factory();
	private static readonly Locale.Factory _factory1_PFS = new Locale.Factory();
	private static readonly Yes_No_Master.Factory _factory2_PFS = new Yes_No_Master.Factory();
	private static readonly YES_NO_Evaluation.Factory _factory3_PFS = new YES_NO_Evaluation.Factory();
	private static readonly TarotDecks.Factory _factory4_PFS = new TarotDecks.Factory();
	private static readonly TarotTypeFlows.Factory _factory5_PFS = new TarotTypeFlows.Factory();
	private static readonly ZodiacRoster.Factory _factory6_PFS = new ZodiacRoster.Factory();
	private static readonly ZodiacLabelsContent.Factory _factory7_PFS = new ZodiacLabelsContent.Factory();
	private static readonly ZodiacMiniRoster.Factory _factory8_PFS = new ZodiacMiniRoster.Factory();
	private static readonly Zodiac_to_Tarot.Factory _factory9_PFS = new Zodiac_to_Tarot.Factory();
	private static readonly AnalyticsButtons.Factory _factory10_PFS = new AnalyticsButtons.Factory();
	private static readonly EducationTarotCards.Factory _factory11_PFS = new EducationTarotCards.Factory();
	private static readonly EDU_Feel_Colors.Factory _factory12_PFS = new EDU_Feel_Colors.Factory();
	private static readonly EDU_Astro_Symbols.Factory _factory13_PFS = new EDU_Astro_Symbols.Factory();
	private static readonly EDU_Elements_Symbols.Factory _factory14_PFS = new EDU_Elements_Symbols.Factory();
	private static readonly EDU_TarotCardsGroup.Factory _factory15_PFS = new EDU_TarotCardsGroup.Factory();
	private TarotTypeFlows() : base(MetaDefault)
	{
	}
	private TarotTypeFlows(BGId id) : base(MetaDefault, id)
	{
	}
	private TarotTypeFlows(BGMetaEntity meta) : base(meta)
	{
	}
	private TarotTypeFlows(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TarotTypeFlows FindEntity(Predicate<TarotTypeFlows> filter)
	{
		return (TarotTypeFlows) MetaDefault.FindEntity(entity => filter==null || filter((TarotTypeFlows) entity));
	}
	public static List<TarotTypeFlows> FindEntities(Predicate<TarotTypeFlows> filter, List<TarotTypeFlows> result=null, Comparison<TarotTypeFlows> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<TarotTypeFlows> action, Predicate<TarotTypeFlows> filter=null, Comparison<TarotTypeFlows> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TarotTypeFlows) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TarotTypeFlows) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TarotTypeFlows)e1,(TarotTypeFlows)e2));
	}
	public static TarotTypeFlows GetEntity(BGId entityId) => (TarotTypeFlows) MetaDefault.GetEntity(entityId);
	public static TarotTypeFlows GetEntity(int index) => (TarotTypeFlows) MetaDefault[index];
	public static TarotTypeFlows GetEntity(string entityName) => (TarotTypeFlows) MetaDefault.GetEntity(entityName);
	public static TarotTypeFlows NewEntity() => (TarotTypeFlows) MetaDefault.NewEntity();
	public static TarotTypeFlows NewEntity(BGId entityId) => (TarotTypeFlows) MetaDefault.NewEntity(entityId);
	public static TarotTypeFlows NewEntity(Action<TarotTypeFlows> callback)
	{
		return (TarotTypeFlows) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((TarotTypeFlows)entity)));
	}
}

public partial class ZodiacRoster : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new ZodiacRoster(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new ZodiacRoster(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5147067808229039784UL,10421122762563687867UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name
	{
		get => _name[Index];
		set => _name[Index] = value;
	}
	public System.String Sign
	{
		get => _Sign[Index];
		set => _Sign[Index] = value;
	}
	public System.String Aka_English
	{
		get => _Aka_English[Index];
		set => _Aka_English[Index] = value;
	}
	public System.String Sign_RO
	{
		get => _Sign_RO[Index];
		set => _Sign_RO[Index] = value;
	}
	public System.String Dates_String_A
	{
		get => _Dates_String_A[Index];
		set => _Dates_String_A[Index] = value;
	}
	public System.Int32 Position
	{
		get => _Position[Index];
		set => _Position[Index] = value;
	}
	public UnityEngine.Sprite ZRound => _ZRound[Index];
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(4849080844715743559UL, 5685830126565744565UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Sign;
	public static BansheeGz.BGDatabase.BGFieldString _Sign => _ufle12jhs77_Sign ?? (_ufle12jhs77_Sign = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5339685349260402045UL, 16536786771506965657UL), () => _ufle12jhs77_Sign = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Aka_English;
	public static BansheeGz.BGDatabase.BGFieldString _Aka_English => _ufle12jhs77_Aka_English ?? (_ufle12jhs77_Aka_English = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5214100446557474108UL, 4253383342634868411UL), () => _ufle12jhs77_Aka_English = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Sign_RO;
	public static BansheeGz.BGDatabase.BGFieldString _Sign_RO => _ufle12jhs77_Sign_RO ?? (_ufle12jhs77_Sign_RO = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4841667933567816560UL, 11843313492159231393UL), () => _ufle12jhs77_Sign_RO = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Dates_String_A;
	public static BansheeGz.BGDatabase.BGFieldString _Dates_String_A => _ufle12jhs77_Dates_String_A ?? (_ufle12jhs77_Dates_String_A = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4626239652555989183UL, 15929957039093081231UL), () => _ufle12jhs77_Dates_String_A = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Position;
	public static BansheeGz.BGDatabase.BGFieldInt _Position => _ufle12jhs77_Position ?? (_ufle12jhs77_Position = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(4812814548109614624UL, 8308272517211056557UL), () => _ufle12jhs77_Position = null));
	private static BansheeGz.BGDatabase.BGFieldUnitySprite _ufle12jhs77_ZRound;
	public static BansheeGz.BGDatabase.BGFieldUnitySprite _ZRound => _ufle12jhs77_ZRound ?? (_ufle12jhs77_ZRound = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldUnitySprite>(MetaDefault, new BGId(4825505713753073775UL, 2244139204542498183UL), () => _ufle12jhs77_ZRound = null));
	private static readonly Localization.Factory _factory0_PFS = new Localization.Factory();
	private static readonly Locale.Factory _factory1_PFS = new Locale.Factory();
	private static readonly Yes_No_Master.Factory _factory2_PFS = new Yes_No_Master.Factory();
	private static readonly YES_NO_Evaluation.Factory _factory3_PFS = new YES_NO_Evaluation.Factory();
	private static readonly TarotDecks.Factory _factory4_PFS = new TarotDecks.Factory();
	private static readonly TarotTypeFlows.Factory _factory5_PFS = new TarotTypeFlows.Factory();
	private static readonly ZodiacRoster.Factory _factory6_PFS = new ZodiacRoster.Factory();
	private static readonly ZodiacLabelsContent.Factory _factory7_PFS = new ZodiacLabelsContent.Factory();
	private static readonly ZodiacMiniRoster.Factory _factory8_PFS = new ZodiacMiniRoster.Factory();
	private static readonly Zodiac_to_Tarot.Factory _factory9_PFS = new Zodiac_to_Tarot.Factory();
	private static readonly AnalyticsButtons.Factory _factory10_PFS = new AnalyticsButtons.Factory();
	private static readonly EducationTarotCards.Factory _factory11_PFS = new EducationTarotCards.Factory();
	private static readonly EDU_Feel_Colors.Factory _factory12_PFS = new EDU_Feel_Colors.Factory();
	private static readonly EDU_Astro_Symbols.Factory _factory13_PFS = new EDU_Astro_Symbols.Factory();
	private static readonly EDU_Elements_Symbols.Factory _factory14_PFS = new EDU_Elements_Symbols.Factory();
	private static readonly EDU_TarotCardsGroup.Factory _factory15_PFS = new EDU_TarotCardsGroup.Factory();
	private ZodiacRoster() : base(MetaDefault)
	{
	}
	private ZodiacRoster(BGId id) : base(MetaDefault, id)
	{
	}
	private ZodiacRoster(BGMetaEntity meta) : base(meta)
	{
	}
	private ZodiacRoster(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static ZodiacRoster FindEntity(Predicate<ZodiacRoster> filter)
	{
		return (ZodiacRoster) MetaDefault.FindEntity(entity => filter==null || filter((ZodiacRoster) entity));
	}
	public static List<ZodiacRoster> FindEntities(Predicate<ZodiacRoster> filter, List<ZodiacRoster> result=null, Comparison<ZodiacRoster> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<ZodiacRoster> action, Predicate<ZodiacRoster> filter=null, Comparison<ZodiacRoster> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((ZodiacRoster) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((ZodiacRoster) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((ZodiacRoster)e1,(ZodiacRoster)e2));
	}
	public static ZodiacRoster GetEntity(BGId entityId) => (ZodiacRoster) MetaDefault.GetEntity(entityId);
	public static ZodiacRoster GetEntity(int index) => (ZodiacRoster) MetaDefault[index];
	public static ZodiacRoster GetEntity(string entityName) => (ZodiacRoster) MetaDefault.GetEntity(entityName);
	public static ZodiacRoster NewEntity() => (ZodiacRoster) MetaDefault.NewEntity();
	public static ZodiacRoster NewEntity(BGId entityId) => (ZodiacRoster) MetaDefault.NewEntity(entityId);
	public static ZodiacRoster NewEntity(Action<ZodiacRoster> callback)
	{
		return (ZodiacRoster) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((ZodiacRoster)entity)));
	}
}

public partial class ZodiacLabelsContent : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new ZodiacLabelsContent(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new ZodiacLabelsContent(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5169456957114114924UL,2958358474780110762UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name
	{
		get => _name[Index];
		set => _name[Index] = value;
	}
	public System.String Part
	{
		get => _Part[Index];
		set => _Part[Index] = value;
	}
	public System.String LabelType
	{
		get => _LabelType[Index];
		set => _LabelType[Index] = value;
	}
	public System.Int32 Order
	{
		get => _Order[Index];
		set => _Order[Index] = value;
	}
	public System.String PRE_Label
	{
		get => _PRE_Label[Index];
		set => _PRE_Label[Index] = value;
	}
	public System.String AFTER_Label
	{
		get => _AFTER_Label[Index];
		set => _AFTER_Label[Index] = value;
	}
	public System.String Lang
	{
		get => _Lang[Index];
		set => _Lang[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5105242995803793258UL, 13896140556466553004UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Part;
	public static BansheeGz.BGDatabase.BGFieldString _Part => _ufle12jhs77_Part ?? (_ufle12jhs77_Part = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5450186861392940636UL, 12630422445134834822UL), () => _ufle12jhs77_Part = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_LabelType;
	public static BansheeGz.BGDatabase.BGFieldString _LabelType => _ufle12jhs77_LabelType ?? (_ufle12jhs77_LabelType = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4832241787868654002UL, 3551801150251356311UL), () => _ufle12jhs77_LabelType = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Order;
	public static BansheeGz.BGDatabase.BGFieldInt _Order => _ufle12jhs77_Order ?? (_ufle12jhs77_Order = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5696365080461413915UL, 15779780244251980174UL), () => _ufle12jhs77_Order = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_PRE_Label;
	public static BansheeGz.BGDatabase.BGFieldString _PRE_Label => _ufle12jhs77_PRE_Label ?? (_ufle12jhs77_PRE_Label = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4978921239023644029UL, 13699062029638403974UL), () => _ufle12jhs77_PRE_Label = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_AFTER_Label;
	public static BansheeGz.BGDatabase.BGFieldString _AFTER_Label => _ufle12jhs77_AFTER_Label ?? (_ufle12jhs77_AFTER_Label = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4642448405744743537UL, 14679984690082410902UL), () => _ufle12jhs77_AFTER_Label = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Lang;
	public static BansheeGz.BGDatabase.BGFieldString _Lang => _ufle12jhs77_Lang ?? (_ufle12jhs77_Lang = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5344846711899899154UL, 15288491515530922921UL), () => _ufle12jhs77_Lang = null));
	private static readonly Localization.Factory _factory0_PFS = new Localization.Factory();
	private static readonly Locale.Factory _factory1_PFS = new Locale.Factory();
	private static readonly Yes_No_Master.Factory _factory2_PFS = new Yes_No_Master.Factory();
	private static readonly YES_NO_Evaluation.Factory _factory3_PFS = new YES_NO_Evaluation.Factory();
	private static readonly TarotDecks.Factory _factory4_PFS = new TarotDecks.Factory();
	private static readonly TarotTypeFlows.Factory _factory5_PFS = new TarotTypeFlows.Factory();
	private static readonly ZodiacRoster.Factory _factory6_PFS = new ZodiacRoster.Factory();
	private static readonly ZodiacLabelsContent.Factory _factory7_PFS = new ZodiacLabelsContent.Factory();
	private static readonly ZodiacMiniRoster.Factory _factory8_PFS = new ZodiacMiniRoster.Factory();
	private static readonly Zodiac_to_Tarot.Factory _factory9_PFS = new Zodiac_to_Tarot.Factory();
	private static readonly AnalyticsButtons.Factory _factory10_PFS = new AnalyticsButtons.Factory();
	private static readonly EducationTarotCards.Factory _factory11_PFS = new EducationTarotCards.Factory();
	private static readonly EDU_Feel_Colors.Factory _factory12_PFS = new EDU_Feel_Colors.Factory();
	private static readonly EDU_Astro_Symbols.Factory _factory13_PFS = new EDU_Astro_Symbols.Factory();
	private static readonly EDU_Elements_Symbols.Factory _factory14_PFS = new EDU_Elements_Symbols.Factory();
	private static readonly EDU_TarotCardsGroup.Factory _factory15_PFS = new EDU_TarotCardsGroup.Factory();
	private ZodiacLabelsContent() : base(MetaDefault)
	{
	}
	private ZodiacLabelsContent(BGId id) : base(MetaDefault, id)
	{
	}
	private ZodiacLabelsContent(BGMetaEntity meta) : base(meta)
	{
	}
	private ZodiacLabelsContent(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static ZodiacLabelsContent FindEntity(Predicate<ZodiacLabelsContent> filter)
	{
		return (ZodiacLabelsContent) MetaDefault.FindEntity(entity => filter==null || filter((ZodiacLabelsContent) entity));
	}
	public static List<ZodiacLabelsContent> FindEntities(Predicate<ZodiacLabelsContent> filter, List<ZodiacLabelsContent> result=null, Comparison<ZodiacLabelsContent> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<ZodiacLabelsContent> action, Predicate<ZodiacLabelsContent> filter=null, Comparison<ZodiacLabelsContent> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((ZodiacLabelsContent) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((ZodiacLabelsContent) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((ZodiacLabelsContent)e1,(ZodiacLabelsContent)e2));
	}
	public static ZodiacLabelsContent GetEntity(BGId entityId) => (ZodiacLabelsContent) MetaDefault.GetEntity(entityId);
	public static ZodiacLabelsContent GetEntity(int index) => (ZodiacLabelsContent) MetaDefault[index];
	public static ZodiacLabelsContent GetEntity(string entityName) => (ZodiacLabelsContent) MetaDefault.GetEntity(entityName);
	public static ZodiacLabelsContent NewEntity() => (ZodiacLabelsContent) MetaDefault.NewEntity();
	public static ZodiacLabelsContent NewEntity(BGId entityId) => (ZodiacLabelsContent) MetaDefault.NewEntity(entityId);
	public static ZodiacLabelsContent NewEntity(Action<ZodiacLabelsContent> callback)
	{
		return (ZodiacLabelsContent) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((ZodiacLabelsContent)entity)));
	}
}

public partial class ZodiacMiniRoster : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new ZodiacMiniRoster(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new ZodiacMiniRoster(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4905563135571822906UL,15705800709155814830UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name
	{
		get => _name[Index];
		set => _name[Index] = value;
	}
	public System.Int32 Position
	{
		get => _Position[Index];
		set => _Position[Index] = value;
	}
	public System.String Preposition
	{
		get => _Preposition[Index];
		set => _Preposition[Index] = value;
	}
	public System.String Sign
	{
		get => _Sign[Index];
		set => _Sign[Index] = value;
	}
	public System.String Lang
	{
		get => _Lang[Index];
		set => _Lang[Index] = value;
	}
	public System.String HoroscopeTitle
	{
		get => _HoroscopeTitle[Index];
		set => _HoroscopeTitle[Index] = value;
	}
	public System.String HoroscopeDateAid1
	{
		get => _HoroscopeDateAid1[Index];
		set => _HoroscopeDateAid1[Index] = value;
	}
	public System.String HoroscopeDateAid2
	{
		get => _HoroscopeDateAid2[Index];
		set => _HoroscopeDateAid2[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5518569707483194595UL, 10983528280487294100UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Position;
	public static BansheeGz.BGDatabase.BGFieldInt _Position => _ufle12jhs77_Position ?? (_ufle12jhs77_Position = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5391898163278217163UL, 6899847500822994339UL), () => _ufle12jhs77_Position = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Preposition;
	public static BansheeGz.BGDatabase.BGFieldString _Preposition => _ufle12jhs77_Preposition ?? (_ufle12jhs77_Preposition = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5059205049949793055UL, 18290127892591216801UL), () => _ufle12jhs77_Preposition = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Sign;
	public static BansheeGz.BGDatabase.BGFieldString _Sign => _ufle12jhs77_Sign ?? (_ufle12jhs77_Sign = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4674484454286720946UL, 10975166614306492065UL), () => _ufle12jhs77_Sign = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Lang;
	public static BansheeGz.BGDatabase.BGFieldString _Lang => _ufle12jhs77_Lang ?? (_ufle12jhs77_Lang = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5539515901917433610UL, 1625492394981580192UL), () => _ufle12jhs77_Lang = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_HoroscopeTitle;
	public static BansheeGz.BGDatabase.BGFieldString _HoroscopeTitle => _ufle12jhs77_HoroscopeTitle ?? (_ufle12jhs77_HoroscopeTitle = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5456705895424332768UL, 11199815392539109540UL), () => _ufle12jhs77_HoroscopeTitle = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_HoroscopeDateAid1;
	public static BansheeGz.BGDatabase.BGFieldString _HoroscopeDateAid1 => _ufle12jhs77_HoroscopeDateAid1 ?? (_ufle12jhs77_HoroscopeDateAid1 = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5655893170963670612UL, 6475351535921056438UL), () => _ufle12jhs77_HoroscopeDateAid1 = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_HoroscopeDateAid2;
	public static BansheeGz.BGDatabase.BGFieldString _HoroscopeDateAid2 => _ufle12jhs77_HoroscopeDateAid2 ?? (_ufle12jhs77_HoroscopeDateAid2 = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5224518339602993869UL, 6809370775792664739UL), () => _ufle12jhs77_HoroscopeDateAid2 = null));
	private static readonly Localization.Factory _factory0_PFS = new Localization.Factory();
	private static readonly Locale.Factory _factory1_PFS = new Locale.Factory();
	private static readonly Yes_No_Master.Factory _factory2_PFS = new Yes_No_Master.Factory();
	private static readonly YES_NO_Evaluation.Factory _factory3_PFS = new YES_NO_Evaluation.Factory();
	private static readonly TarotDecks.Factory _factory4_PFS = new TarotDecks.Factory();
	private static readonly TarotTypeFlows.Factory _factory5_PFS = new TarotTypeFlows.Factory();
	private static readonly ZodiacRoster.Factory _factory6_PFS = new ZodiacRoster.Factory();
	private static readonly ZodiacLabelsContent.Factory _factory7_PFS = new ZodiacLabelsContent.Factory();
	private static readonly ZodiacMiniRoster.Factory _factory8_PFS = new ZodiacMiniRoster.Factory();
	private static readonly Zodiac_to_Tarot.Factory _factory9_PFS = new Zodiac_to_Tarot.Factory();
	private static readonly AnalyticsButtons.Factory _factory10_PFS = new AnalyticsButtons.Factory();
	private static readonly EducationTarotCards.Factory _factory11_PFS = new EducationTarotCards.Factory();
	private static readonly EDU_Feel_Colors.Factory _factory12_PFS = new EDU_Feel_Colors.Factory();
	private static readonly EDU_Astro_Symbols.Factory _factory13_PFS = new EDU_Astro_Symbols.Factory();
	private static readonly EDU_Elements_Symbols.Factory _factory14_PFS = new EDU_Elements_Symbols.Factory();
	private static readonly EDU_TarotCardsGroup.Factory _factory15_PFS = new EDU_TarotCardsGroup.Factory();
	private ZodiacMiniRoster() : base(MetaDefault)
	{
	}
	private ZodiacMiniRoster(BGId id) : base(MetaDefault, id)
	{
	}
	private ZodiacMiniRoster(BGMetaEntity meta) : base(meta)
	{
	}
	private ZodiacMiniRoster(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static ZodiacMiniRoster FindEntity(Predicate<ZodiacMiniRoster> filter)
	{
		return (ZodiacMiniRoster) MetaDefault.FindEntity(entity => filter==null || filter((ZodiacMiniRoster) entity));
	}
	public static List<ZodiacMiniRoster> FindEntities(Predicate<ZodiacMiniRoster> filter, List<ZodiacMiniRoster> result=null, Comparison<ZodiacMiniRoster> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<ZodiacMiniRoster> action, Predicate<ZodiacMiniRoster> filter=null, Comparison<ZodiacMiniRoster> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((ZodiacMiniRoster) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((ZodiacMiniRoster) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((ZodiacMiniRoster)e1,(ZodiacMiniRoster)e2));
	}
	public static ZodiacMiniRoster GetEntity(BGId entityId) => (ZodiacMiniRoster) MetaDefault.GetEntity(entityId);
	public static ZodiacMiniRoster GetEntity(int index) => (ZodiacMiniRoster) MetaDefault[index];
	public static ZodiacMiniRoster GetEntity(string entityName) => (ZodiacMiniRoster) MetaDefault.GetEntity(entityName);
	public static ZodiacMiniRoster NewEntity() => (ZodiacMiniRoster) MetaDefault.NewEntity();
	public static ZodiacMiniRoster NewEntity(BGId entityId) => (ZodiacMiniRoster) MetaDefault.NewEntity(entityId);
	public static ZodiacMiniRoster NewEntity(Action<ZodiacMiniRoster> callback)
	{
		return (ZodiacMiniRoster) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((ZodiacMiniRoster)entity)));
	}
}

public partial class Zodiac_to_Tarot : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new Zodiac_to_Tarot(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new Zodiac_to_Tarot(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5050548447098071612UL,13799984278728603576UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name
	{
		get => _name[Index];
		set => _name[Index] = value;
	}
	public System.String Card
	{
		get => _Card[Index];
		set => _Card[Index] = value;
	}
	public System.Int32 CardNo
	{
		get => _CardNo[Index];
		set => _CardNo[Index] = value;
	}
	public System.String Type
	{
		get => _Type[Index];
		set => _Type[Index] = value;
	}
	public System.Int32 TypeIndex
	{
		get => _TypeIndex[Index];
		set => _TypeIndex[Index] = value;
	}
	public System.Int32 InterpretationIndex
	{
		get => _InterpretationIndex[Index];
		set => _InterpretationIndex[Index] = value;
	}
	public System.String Interpretation
	{
		get => _Interpretation[Index];
		set => _Interpretation[Index] = value;
	}
	public System.String Lang
	{
		get => _Lang[Index];
		set => _Lang[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(4776075059599750358UL, 16097893061518193052UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Card;
	public static BansheeGz.BGDatabase.BGFieldString _Card => _ufle12jhs77_Card ?? (_ufle12jhs77_Card = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5103967706586175018UL, 12003900798198213819UL), () => _ufle12jhs77_Card = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_CardNo;
	public static BansheeGz.BGDatabase.BGFieldInt _CardNo => _ufle12jhs77_CardNo ?? (_ufle12jhs77_CardNo = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(4889058033788007845UL, 11098988589778624439UL), () => _ufle12jhs77_CardNo = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Type;
	public static BansheeGz.BGDatabase.BGFieldString _Type => _ufle12jhs77_Type ?? (_ufle12jhs77_Type = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5583593813117741552UL, 316550625641036961UL), () => _ufle12jhs77_Type = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_TypeIndex;
	public static BansheeGz.BGDatabase.BGFieldInt _TypeIndex => _ufle12jhs77_TypeIndex ?? (_ufle12jhs77_TypeIndex = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5505167508447274818UL, 2132737068430992021UL), () => _ufle12jhs77_TypeIndex = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_InterpretationIndex;
	public static BansheeGz.BGDatabase.BGFieldInt _InterpretationIndex => _ufle12jhs77_InterpretationIndex ?? (_ufle12jhs77_InterpretationIndex = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5075221628088143259UL, 12170362952696092089UL), () => _ufle12jhs77_InterpretationIndex = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Interpretation;
	public static BansheeGz.BGDatabase.BGFieldString _Interpretation => _ufle12jhs77_Interpretation ?? (_ufle12jhs77_Interpretation = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4993777908494917231UL, 6022249372061769350UL), () => _ufle12jhs77_Interpretation = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Lang;
	public static BansheeGz.BGDatabase.BGFieldString _Lang => _ufle12jhs77_Lang ?? (_ufle12jhs77_Lang = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4681840741758329119UL, 12131747878598550197UL), () => _ufle12jhs77_Lang = null));
	private static readonly Localization.Factory _factory0_PFS = new Localization.Factory();
	private static readonly Locale.Factory _factory1_PFS = new Locale.Factory();
	private static readonly Yes_No_Master.Factory _factory2_PFS = new Yes_No_Master.Factory();
	private static readonly YES_NO_Evaluation.Factory _factory3_PFS = new YES_NO_Evaluation.Factory();
	private static readonly TarotDecks.Factory _factory4_PFS = new TarotDecks.Factory();
	private static readonly TarotTypeFlows.Factory _factory5_PFS = new TarotTypeFlows.Factory();
	private static readonly ZodiacRoster.Factory _factory6_PFS = new ZodiacRoster.Factory();
	private static readonly ZodiacLabelsContent.Factory _factory7_PFS = new ZodiacLabelsContent.Factory();
	private static readonly ZodiacMiniRoster.Factory _factory8_PFS = new ZodiacMiniRoster.Factory();
	private static readonly Zodiac_to_Tarot.Factory _factory9_PFS = new Zodiac_to_Tarot.Factory();
	private static readonly AnalyticsButtons.Factory _factory10_PFS = new AnalyticsButtons.Factory();
	private static readonly EducationTarotCards.Factory _factory11_PFS = new EducationTarotCards.Factory();
	private static readonly EDU_Feel_Colors.Factory _factory12_PFS = new EDU_Feel_Colors.Factory();
	private static readonly EDU_Astro_Symbols.Factory _factory13_PFS = new EDU_Astro_Symbols.Factory();
	private static readonly EDU_Elements_Symbols.Factory _factory14_PFS = new EDU_Elements_Symbols.Factory();
	private static readonly EDU_TarotCardsGroup.Factory _factory15_PFS = new EDU_TarotCardsGroup.Factory();
	private Zodiac_to_Tarot() : base(MetaDefault)
	{
	}
	private Zodiac_to_Tarot(BGId id) : base(MetaDefault, id)
	{
	}
	private Zodiac_to_Tarot(BGMetaEntity meta) : base(meta)
	{
	}
	private Zodiac_to_Tarot(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static Zodiac_to_Tarot FindEntity(Predicate<Zodiac_to_Tarot> filter)
	{
		return (Zodiac_to_Tarot) MetaDefault.FindEntity(entity => filter==null || filter((Zodiac_to_Tarot) entity));
	}
	public static List<Zodiac_to_Tarot> FindEntities(Predicate<Zodiac_to_Tarot> filter, List<Zodiac_to_Tarot> result=null, Comparison<Zodiac_to_Tarot> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<Zodiac_to_Tarot> action, Predicate<Zodiac_to_Tarot> filter=null, Comparison<Zodiac_to_Tarot> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((Zodiac_to_Tarot) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((Zodiac_to_Tarot) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((Zodiac_to_Tarot)e1,(Zodiac_to_Tarot)e2));
	}
	public static Zodiac_to_Tarot GetEntity(BGId entityId) => (Zodiac_to_Tarot) MetaDefault.GetEntity(entityId);
	public static Zodiac_to_Tarot GetEntity(int index) => (Zodiac_to_Tarot) MetaDefault[index];
	public static Zodiac_to_Tarot GetEntity(string entityName) => (Zodiac_to_Tarot) MetaDefault.GetEntity(entityName);
	public static Zodiac_to_Tarot NewEntity() => (Zodiac_to_Tarot) MetaDefault.NewEntity();
	public static Zodiac_to_Tarot NewEntity(BGId entityId) => (Zodiac_to_Tarot) MetaDefault.NewEntity(entityId);
	public static Zodiac_to_Tarot NewEntity(Action<Zodiac_to_Tarot> callback)
	{
		return (Zodiac_to_Tarot) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((Zodiac_to_Tarot)entity)));
	}
}

public partial class AnalyticsButtons : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new AnalyticsButtons(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new AnalyticsButtons(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4849867931121924539UL,5938256988249729188UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name
	{
		get => _name[Index];
		set => _name[Index] = value;
	}
	public System.String buttonTag
	{
		get => _buttonTag[Index];
		set => _buttonTag[Index] = value;
	}
	public System.Int32 clicks
	{
		get => _clicks[Index];
		set => _clicks[Index] = value;
	}
	public System.Int32 dateInt
	{
		get => _dateInt[Index];
		set => _dateInt[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5330363585029206433UL, 10457162026754895276UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_buttonTag;
	public static BansheeGz.BGDatabase.BGFieldString _buttonTag => _ufle12jhs77_buttonTag ?? (_ufle12jhs77_buttonTag = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5229229303772467984UL, 446868246033110159UL), () => _ufle12jhs77_buttonTag = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_clicks;
	public static BansheeGz.BGDatabase.BGFieldInt _clicks => _ufle12jhs77_clicks ?? (_ufle12jhs77_clicks = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(4886820018939971130UL, 1740958838079693963UL), () => _ufle12jhs77_clicks = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_dateInt;
	public static BansheeGz.BGDatabase.BGFieldInt _dateInt => _ufle12jhs77_dateInt ?? (_ufle12jhs77_dateInt = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5681286572261322474UL, 13053638240341526924UL), () => _ufle12jhs77_dateInt = null));
	private static readonly Localization.Factory _factory0_PFS = new Localization.Factory();
	private static readonly Locale.Factory _factory1_PFS = new Locale.Factory();
	private static readonly Yes_No_Master.Factory _factory2_PFS = new Yes_No_Master.Factory();
	private static readonly YES_NO_Evaluation.Factory _factory3_PFS = new YES_NO_Evaluation.Factory();
	private static readonly TarotDecks.Factory _factory4_PFS = new TarotDecks.Factory();
	private static readonly TarotTypeFlows.Factory _factory5_PFS = new TarotTypeFlows.Factory();
	private static readonly ZodiacRoster.Factory _factory6_PFS = new ZodiacRoster.Factory();
	private static readonly ZodiacLabelsContent.Factory _factory7_PFS = new ZodiacLabelsContent.Factory();
	private static readonly ZodiacMiniRoster.Factory _factory8_PFS = new ZodiacMiniRoster.Factory();
	private static readonly Zodiac_to_Tarot.Factory _factory9_PFS = new Zodiac_to_Tarot.Factory();
	private static readonly AnalyticsButtons.Factory _factory10_PFS = new AnalyticsButtons.Factory();
	private static readonly EducationTarotCards.Factory _factory11_PFS = new EducationTarotCards.Factory();
	private static readonly EDU_Feel_Colors.Factory _factory12_PFS = new EDU_Feel_Colors.Factory();
	private static readonly EDU_Astro_Symbols.Factory _factory13_PFS = new EDU_Astro_Symbols.Factory();
	private static readonly EDU_Elements_Symbols.Factory _factory14_PFS = new EDU_Elements_Symbols.Factory();
	private static readonly EDU_TarotCardsGroup.Factory _factory15_PFS = new EDU_TarotCardsGroup.Factory();
	private AnalyticsButtons() : base(MetaDefault)
	{
	}
	private AnalyticsButtons(BGId id) : base(MetaDefault, id)
	{
	}
	private AnalyticsButtons(BGMetaEntity meta) : base(meta)
	{
	}
	private AnalyticsButtons(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static AnalyticsButtons FindEntity(Predicate<AnalyticsButtons> filter)
	{
		return (AnalyticsButtons) MetaDefault.FindEntity(entity => filter==null || filter((AnalyticsButtons) entity));
	}
	public static List<AnalyticsButtons> FindEntities(Predicate<AnalyticsButtons> filter, List<AnalyticsButtons> result=null, Comparison<AnalyticsButtons> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<AnalyticsButtons> action, Predicate<AnalyticsButtons> filter=null, Comparison<AnalyticsButtons> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((AnalyticsButtons) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((AnalyticsButtons) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((AnalyticsButtons)e1,(AnalyticsButtons)e2));
	}
	public static AnalyticsButtons GetEntity(BGId entityId) => (AnalyticsButtons) MetaDefault.GetEntity(entityId);
	public static AnalyticsButtons GetEntity(int index) => (AnalyticsButtons) MetaDefault[index];
	public static AnalyticsButtons GetEntity(string entityName) => (AnalyticsButtons) MetaDefault.GetEntity(entityName);
	public static AnalyticsButtons NewEntity() => (AnalyticsButtons) MetaDefault.NewEntity();
	public static AnalyticsButtons NewEntity(BGId entityId) => (AnalyticsButtons) MetaDefault.NewEntity(entityId);
	public static AnalyticsButtons NewEntity(Action<AnalyticsButtons> callback)
	{
		return (AnalyticsButtons) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((AnalyticsButtons)entity)));
	}
}

public partial class EducationTarotCards : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new EducationTarotCards(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new EducationTarotCards(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5568848993166585632UL,914478946339424398UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name
	{
		get => _name[Index];
		set => _name[Index] = value;
	}
	public System.String CardIndex
	{
		get => _CardIndex[Index];
		set => _CardIndex[Index] = value;
	}
	public UnityEngine.Sprite CardImg => _CardImg[Index];
	public UnityEngine.GameObject TarotCard => _TarotCard[Index];
	public System.String GroupIndex
	{
		get => _GroupIndex[Index];
		set => _GroupIndex[Index] = value;
	}
	public System.String GroupName
	{
		get => _GroupName[Index];
		set => _GroupName[Index] = value;
	}
	public System.String Element1
	{
		get => _Element1[Index];
		set => _Element1[Index] = value;
	}
	public System.String Element2
	{
		get => _Element2[Index];
		set => _Element2[Index] = value;
	}
	public System.String Astro
	{
		get => _Astro[Index];
		set => _Astro[Index] = value;
	}
	public System.String Tag1
	{
		get => _Tag1[Index];
		set => _Tag1[Index] = value;
	}
	public System.String Tag2
	{
		get => _Tag2[Index];
		set => _Tag2[Index] = value;
	}
	public System.String Tag3
	{
		get => _Tag3[Index];
		set => _Tag3[Index] = value;
	}
	public System.String Tag4
	{
		get => _Tag4[Index];
		set => _Tag4[Index] = value;
	}
	public System.String Tag5
	{
		get => _Tag5[Index];
		set => _Tag5[Index] = value;
	}
	public System.String Feel
	{
		get => _Feel[Index];
		set => _Feel[Index] = value;
	}
	public System.String Position
	{
		get => _Position[Index];
		set => _Position[Index] = value;
	}
	public System.String Description
	{
		get => _Description[Index];
		set => _Description[Index] = value;
	}
	public System.String Group1
	{
		get => _Group1[Index];
		set => _Group1[Index] = value;
	}
	public System.String Group1Interpretation
	{
		get => _Group1Interpretation[Index];
		set => _Group1Interpretation[Index] = value;
	}
	public System.String Group2
	{
		get => _Group2[Index];
		set => _Group2[Index] = value;
	}
	public System.String Group2Interpretation
	{
		get => _Group2Interpretation[Index];
		set => _Group2Interpretation[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5363054206942037602UL, 17504905377933474228UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_CardIndex;
	public static BansheeGz.BGDatabase.BGFieldString _CardIndex => _ufle12jhs77_CardIndex ?? (_ufle12jhs77_CardIndex = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5364775848624915988UL, 4461843678322508681UL), () => _ufle12jhs77_CardIndex = null));
	private static BansheeGz.BGDatabase.BGFieldUnitySprite _ufle12jhs77_CardImg;
	public static BansheeGz.BGDatabase.BGFieldUnitySprite _CardImg => _ufle12jhs77_CardImg ?? (_ufle12jhs77_CardImg = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldUnitySprite>(MetaDefault, new BGId(5099740864389393670UL, 9868163865395527865UL), () => _ufle12jhs77_CardImg = null));
	private static BansheeGz.BGDatabase.BGFieldUnityPrefab _ufle12jhs77_TarotCard;
	public static BansheeGz.BGDatabase.BGFieldUnityPrefab _TarotCard => _ufle12jhs77_TarotCard ?? (_ufle12jhs77_TarotCard = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldUnityPrefab>(MetaDefault, new BGId(5316170233029147989UL, 11433284089108355251UL), () => _ufle12jhs77_TarotCard = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_GroupIndex;
	public static BansheeGz.BGDatabase.BGFieldString _GroupIndex => _ufle12jhs77_GroupIndex ?? (_ufle12jhs77_GroupIndex = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4796279316873230480UL, 14089618576400653722UL), () => _ufle12jhs77_GroupIndex = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_GroupName;
	public static BansheeGz.BGDatabase.BGFieldString _GroupName => _ufle12jhs77_GroupName ?? (_ufle12jhs77_GroupName = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5629938075056405939UL, 2362249028336741788UL), () => _ufle12jhs77_GroupName = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Element1;
	public static BansheeGz.BGDatabase.BGFieldString _Element1 => _ufle12jhs77_Element1 ?? (_ufle12jhs77_Element1 = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4711007271460422211UL, 1977946280951183287UL), () => _ufle12jhs77_Element1 = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Element2;
	public static BansheeGz.BGDatabase.BGFieldString _Element2 => _ufle12jhs77_Element2 ?? (_ufle12jhs77_Element2 = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5669416429362633059UL, 9196581215642500257UL), () => _ufle12jhs77_Element2 = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Astro;
	public static BansheeGz.BGDatabase.BGFieldString _Astro => _ufle12jhs77_Astro ?? (_ufle12jhs77_Astro = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5381204549444280485UL, 17134671297865113739UL), () => _ufle12jhs77_Astro = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Tag1;
	public static BansheeGz.BGDatabase.BGFieldString _Tag1 => _ufle12jhs77_Tag1 ?? (_ufle12jhs77_Tag1 = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4671789587812005680UL, 1090137309563261106UL), () => _ufle12jhs77_Tag1 = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Tag2;
	public static BansheeGz.BGDatabase.BGFieldString _Tag2 => _ufle12jhs77_Tag2 ?? (_ufle12jhs77_Tag2 = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5409450061658790720UL, 11510866967612246926UL), () => _ufle12jhs77_Tag2 = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Tag3;
	public static BansheeGz.BGDatabase.BGFieldString _Tag3 => _ufle12jhs77_Tag3 ?? (_ufle12jhs77_Tag3 = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4753315151376502415UL, 4614192986756823211UL), () => _ufle12jhs77_Tag3 = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Tag4;
	public static BansheeGz.BGDatabase.BGFieldString _Tag4 => _ufle12jhs77_Tag4 ?? (_ufle12jhs77_Tag4 = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5047824428185978432UL, 814686325086043296UL), () => _ufle12jhs77_Tag4 = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Tag5;
	public static BansheeGz.BGDatabase.BGFieldString _Tag5 => _ufle12jhs77_Tag5 ?? (_ufle12jhs77_Tag5 = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5591392002148968041UL, 8219742620928364988UL), () => _ufle12jhs77_Tag5 = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Feel;
	public static BansheeGz.BGDatabase.BGFieldString _Feel => _ufle12jhs77_Feel ?? (_ufle12jhs77_Feel = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5550947797888823165UL, 7596664608553422519UL), () => _ufle12jhs77_Feel = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Position;
	public static BansheeGz.BGDatabase.BGFieldString _Position => _ufle12jhs77_Position ?? (_ufle12jhs77_Position = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5188816042992675464UL, 11535969021607637379UL), () => _ufle12jhs77_Position = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Description;
	public static BansheeGz.BGDatabase.BGFieldString _Description => _ufle12jhs77_Description ?? (_ufle12jhs77_Description = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4998687090722866893UL, 14809285102309654932UL), () => _ufle12jhs77_Description = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Group1;
	public static BansheeGz.BGDatabase.BGFieldString _Group1 => _ufle12jhs77_Group1 ?? (_ufle12jhs77_Group1 = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5364995730446805767UL, 17569579767547777189UL), () => _ufle12jhs77_Group1 = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Group1Interpretation;
	public static BansheeGz.BGDatabase.BGFieldString _Group1Interpretation => _ufle12jhs77_Group1Interpretation ?? (_ufle12jhs77_Group1Interpretation = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4725858845069448534UL, 3765816531923132077UL), () => _ufle12jhs77_Group1Interpretation = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Group2;
	public static BansheeGz.BGDatabase.BGFieldString _Group2 => _ufle12jhs77_Group2 ?? (_ufle12jhs77_Group2 = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4955320432687094727UL, 12174574523150953909UL), () => _ufle12jhs77_Group2 = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Group2Interpretation;
	public static BansheeGz.BGDatabase.BGFieldString _Group2Interpretation => _ufle12jhs77_Group2Interpretation ?? (_ufle12jhs77_Group2Interpretation = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5591431893215424879UL, 6498725023551185824UL), () => _ufle12jhs77_Group2Interpretation = null));
	private static readonly Localization.Factory _factory0_PFS = new Localization.Factory();
	private static readonly Locale.Factory _factory1_PFS = new Locale.Factory();
	private static readonly Yes_No_Master.Factory _factory2_PFS = new Yes_No_Master.Factory();
	private static readonly YES_NO_Evaluation.Factory _factory3_PFS = new YES_NO_Evaluation.Factory();
	private static readonly TarotDecks.Factory _factory4_PFS = new TarotDecks.Factory();
	private static readonly TarotTypeFlows.Factory _factory5_PFS = new TarotTypeFlows.Factory();
	private static readonly ZodiacRoster.Factory _factory6_PFS = new ZodiacRoster.Factory();
	private static readonly ZodiacLabelsContent.Factory _factory7_PFS = new ZodiacLabelsContent.Factory();
	private static readonly ZodiacMiniRoster.Factory _factory8_PFS = new ZodiacMiniRoster.Factory();
	private static readonly Zodiac_to_Tarot.Factory _factory9_PFS = new Zodiac_to_Tarot.Factory();
	private static readonly AnalyticsButtons.Factory _factory10_PFS = new AnalyticsButtons.Factory();
	private static readonly EducationTarotCards.Factory _factory11_PFS = new EducationTarotCards.Factory();
	private static readonly EDU_Feel_Colors.Factory _factory12_PFS = new EDU_Feel_Colors.Factory();
	private static readonly EDU_Astro_Symbols.Factory _factory13_PFS = new EDU_Astro_Symbols.Factory();
	private static readonly EDU_Elements_Symbols.Factory _factory14_PFS = new EDU_Elements_Symbols.Factory();
	private static readonly EDU_TarotCardsGroup.Factory _factory15_PFS = new EDU_TarotCardsGroup.Factory();
	private EducationTarotCards() : base(MetaDefault)
	{
	}
	private EducationTarotCards(BGId id) : base(MetaDefault, id)
	{
	}
	private EducationTarotCards(BGMetaEntity meta) : base(meta)
	{
	}
	private EducationTarotCards(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static EducationTarotCards FindEntity(Predicate<EducationTarotCards> filter)
	{
		return (EducationTarotCards) MetaDefault.FindEntity(entity => filter==null || filter((EducationTarotCards) entity));
	}
	public static List<EducationTarotCards> FindEntities(Predicate<EducationTarotCards> filter, List<EducationTarotCards> result=null, Comparison<EducationTarotCards> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<EducationTarotCards> action, Predicate<EducationTarotCards> filter=null, Comparison<EducationTarotCards> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((EducationTarotCards) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((EducationTarotCards) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((EducationTarotCards)e1,(EducationTarotCards)e2));
	}
	public static EducationTarotCards GetEntity(BGId entityId) => (EducationTarotCards) MetaDefault.GetEntity(entityId);
	public static EducationTarotCards GetEntity(int index) => (EducationTarotCards) MetaDefault[index];
	public static EducationTarotCards GetEntity(string entityName) => (EducationTarotCards) MetaDefault.GetEntity(entityName);
	public static EducationTarotCards NewEntity() => (EducationTarotCards) MetaDefault.NewEntity();
	public static EducationTarotCards NewEntity(BGId entityId) => (EducationTarotCards) MetaDefault.NewEntity(entityId);
	public static EducationTarotCards NewEntity(Action<EducationTarotCards> callback)
	{
		return (EducationTarotCards) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((EducationTarotCards)entity)));
	}
}

public partial class EDU_Feel_Colors : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new EDU_Feel_Colors(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new EDU_Feel_Colors(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5009941539382876007UL,5718926636265443738UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name
	{
		get => _name[Index];
		set => _name[Index] = value;
	}
	public System.String Feel
	{
		get => _Feel[Index];
		set => _Feel[Index] = value;
	}
	public UnityEngine.Color FeelColor
	{
		get => _FeelColor[Index];
		set => _FeelColor[Index] = value;
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(4873569029524926088UL, 3815106296152661933UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Feel;
	public static BansheeGz.BGDatabase.BGFieldString _Feel => _ufle12jhs77_Feel ?? (_ufle12jhs77_Feel = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5688493146841131020UL, 10830018811600173971UL), () => _ufle12jhs77_Feel = null));
	private static BansheeGz.BGDatabase.BGFieldColor _ufle12jhs77_FeelColor;
	public static BansheeGz.BGDatabase.BGFieldColor _FeelColor => _ufle12jhs77_FeelColor ?? (_ufle12jhs77_FeelColor = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldColor>(MetaDefault, new BGId(5451043610852276040UL, 14644339666986516628UL), () => _ufle12jhs77_FeelColor = null));
	private static readonly Localization.Factory _factory0_PFS = new Localization.Factory();
	private static readonly Locale.Factory _factory1_PFS = new Locale.Factory();
	private static readonly Yes_No_Master.Factory _factory2_PFS = new Yes_No_Master.Factory();
	private static readonly YES_NO_Evaluation.Factory _factory3_PFS = new YES_NO_Evaluation.Factory();
	private static readonly TarotDecks.Factory _factory4_PFS = new TarotDecks.Factory();
	private static readonly TarotTypeFlows.Factory _factory5_PFS = new TarotTypeFlows.Factory();
	private static readonly ZodiacRoster.Factory _factory6_PFS = new ZodiacRoster.Factory();
	private static readonly ZodiacLabelsContent.Factory _factory7_PFS = new ZodiacLabelsContent.Factory();
	private static readonly ZodiacMiniRoster.Factory _factory8_PFS = new ZodiacMiniRoster.Factory();
	private static readonly Zodiac_to_Tarot.Factory _factory9_PFS = new Zodiac_to_Tarot.Factory();
	private static readonly AnalyticsButtons.Factory _factory10_PFS = new AnalyticsButtons.Factory();
	private static readonly EducationTarotCards.Factory _factory11_PFS = new EducationTarotCards.Factory();
	private static readonly EDU_Feel_Colors.Factory _factory12_PFS = new EDU_Feel_Colors.Factory();
	private static readonly EDU_Astro_Symbols.Factory _factory13_PFS = new EDU_Astro_Symbols.Factory();
	private static readonly EDU_Elements_Symbols.Factory _factory14_PFS = new EDU_Elements_Symbols.Factory();
	private static readonly EDU_TarotCardsGroup.Factory _factory15_PFS = new EDU_TarotCardsGroup.Factory();
	private EDU_Feel_Colors() : base(MetaDefault)
	{
	}
	private EDU_Feel_Colors(BGId id) : base(MetaDefault, id)
	{
	}
	private EDU_Feel_Colors(BGMetaEntity meta) : base(meta)
	{
	}
	private EDU_Feel_Colors(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static EDU_Feel_Colors FindEntity(Predicate<EDU_Feel_Colors> filter)
	{
		return (EDU_Feel_Colors) MetaDefault.FindEntity(entity => filter==null || filter((EDU_Feel_Colors) entity));
	}
	public static List<EDU_Feel_Colors> FindEntities(Predicate<EDU_Feel_Colors> filter, List<EDU_Feel_Colors> result=null, Comparison<EDU_Feel_Colors> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<EDU_Feel_Colors> action, Predicate<EDU_Feel_Colors> filter=null, Comparison<EDU_Feel_Colors> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((EDU_Feel_Colors) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((EDU_Feel_Colors) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((EDU_Feel_Colors)e1,(EDU_Feel_Colors)e2));
	}
	public static EDU_Feel_Colors GetEntity(BGId entityId) => (EDU_Feel_Colors) MetaDefault.GetEntity(entityId);
	public static EDU_Feel_Colors GetEntity(int index) => (EDU_Feel_Colors) MetaDefault[index];
	public static EDU_Feel_Colors GetEntity(string entityName) => (EDU_Feel_Colors) MetaDefault.GetEntity(entityName);
	public static EDU_Feel_Colors NewEntity() => (EDU_Feel_Colors) MetaDefault.NewEntity();
	public static EDU_Feel_Colors NewEntity(BGId entityId) => (EDU_Feel_Colors) MetaDefault.NewEntity(entityId);
	public static EDU_Feel_Colors NewEntity(Action<EDU_Feel_Colors> callback)
	{
		return (EDU_Feel_Colors) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((EDU_Feel_Colors)entity)));
	}
}

public partial class EDU_Astro_Symbols : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new EDU_Astro_Symbols(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new EDU_Astro_Symbols(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4957134648935880762UL,14664458333692734849UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name
	{
		get => _name[Index];
		set => _name[Index] = value;
	}
	public System.String Astro
	{
		get => _Astro[Index];
		set => _Astro[Index] = value;
	}
	public UnityEngine.Sprite AstroImg => _AstroImg[Index];
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5651200357145873144UL, 10184629530807853953UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Astro;
	public static BansheeGz.BGDatabase.BGFieldString _Astro => _ufle12jhs77_Astro ?? (_ufle12jhs77_Astro = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5233888847667244014UL, 17762838289176220067UL), () => _ufle12jhs77_Astro = null));
	private static BansheeGz.BGDatabase.BGFieldUnitySprite _ufle12jhs77_AstroImg;
	public static BansheeGz.BGDatabase.BGFieldUnitySprite _AstroImg => _ufle12jhs77_AstroImg ?? (_ufle12jhs77_AstroImg = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldUnitySprite>(MetaDefault, new BGId(5190042551971431443UL, 2256421507645039745UL), () => _ufle12jhs77_AstroImg = null));
	private static readonly Localization.Factory _factory0_PFS = new Localization.Factory();
	private static readonly Locale.Factory _factory1_PFS = new Locale.Factory();
	private static readonly Yes_No_Master.Factory _factory2_PFS = new Yes_No_Master.Factory();
	private static readonly YES_NO_Evaluation.Factory _factory3_PFS = new YES_NO_Evaluation.Factory();
	private static readonly TarotDecks.Factory _factory4_PFS = new TarotDecks.Factory();
	private static readonly TarotTypeFlows.Factory _factory5_PFS = new TarotTypeFlows.Factory();
	private static readonly ZodiacRoster.Factory _factory6_PFS = new ZodiacRoster.Factory();
	private static readonly ZodiacLabelsContent.Factory _factory7_PFS = new ZodiacLabelsContent.Factory();
	private static readonly ZodiacMiniRoster.Factory _factory8_PFS = new ZodiacMiniRoster.Factory();
	private static readonly Zodiac_to_Tarot.Factory _factory9_PFS = new Zodiac_to_Tarot.Factory();
	private static readonly AnalyticsButtons.Factory _factory10_PFS = new AnalyticsButtons.Factory();
	private static readonly EducationTarotCards.Factory _factory11_PFS = new EducationTarotCards.Factory();
	private static readonly EDU_Feel_Colors.Factory _factory12_PFS = new EDU_Feel_Colors.Factory();
	private static readonly EDU_Astro_Symbols.Factory _factory13_PFS = new EDU_Astro_Symbols.Factory();
	private static readonly EDU_Elements_Symbols.Factory _factory14_PFS = new EDU_Elements_Symbols.Factory();
	private static readonly EDU_TarotCardsGroup.Factory _factory15_PFS = new EDU_TarotCardsGroup.Factory();
	private EDU_Astro_Symbols() : base(MetaDefault)
	{
	}
	private EDU_Astro_Symbols(BGId id) : base(MetaDefault, id)
	{
	}
	private EDU_Astro_Symbols(BGMetaEntity meta) : base(meta)
	{
	}
	private EDU_Astro_Symbols(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static EDU_Astro_Symbols FindEntity(Predicate<EDU_Astro_Symbols> filter)
	{
		return (EDU_Astro_Symbols) MetaDefault.FindEntity(entity => filter==null || filter((EDU_Astro_Symbols) entity));
	}
	public static List<EDU_Astro_Symbols> FindEntities(Predicate<EDU_Astro_Symbols> filter, List<EDU_Astro_Symbols> result=null, Comparison<EDU_Astro_Symbols> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<EDU_Astro_Symbols> action, Predicate<EDU_Astro_Symbols> filter=null, Comparison<EDU_Astro_Symbols> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((EDU_Astro_Symbols) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((EDU_Astro_Symbols) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((EDU_Astro_Symbols)e1,(EDU_Astro_Symbols)e2));
	}
	public static EDU_Astro_Symbols GetEntity(BGId entityId) => (EDU_Astro_Symbols) MetaDefault.GetEntity(entityId);
	public static EDU_Astro_Symbols GetEntity(int index) => (EDU_Astro_Symbols) MetaDefault[index];
	public static EDU_Astro_Symbols GetEntity(string entityName) => (EDU_Astro_Symbols) MetaDefault.GetEntity(entityName);
	public static EDU_Astro_Symbols NewEntity() => (EDU_Astro_Symbols) MetaDefault.NewEntity();
	public static EDU_Astro_Symbols NewEntity(BGId entityId) => (EDU_Astro_Symbols) MetaDefault.NewEntity(entityId);
	public static EDU_Astro_Symbols NewEntity(Action<EDU_Astro_Symbols> callback)
	{
		return (EDU_Astro_Symbols) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((EDU_Astro_Symbols)entity)));
	}
}

public partial class EDU_Elements_Symbols : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new EDU_Elements_Symbols(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new EDU_Elements_Symbols(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5699578525950265407UL,6654955714731553408UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name
	{
		get => _name[Index];
		set => _name[Index] = value;
	}
	public System.String Element
	{
		get => _Element[Index];
		set => _Element[Index] = value;
	}
	public UnityEngine.Sprite ElementImg => _ElementImg[Index];
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5285036992038712205UL, 12762052835904808089UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Element;
	public static BansheeGz.BGDatabase.BGFieldString _Element => _ufle12jhs77_Element ?? (_ufle12jhs77_Element = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5556008969569893871UL, 3904758338761408939UL), () => _ufle12jhs77_Element = null));
	private static BansheeGz.BGDatabase.BGFieldUnitySprite _ufle12jhs77_ElementImg;
	public static BansheeGz.BGDatabase.BGFieldUnitySprite _ElementImg => _ufle12jhs77_ElementImg ?? (_ufle12jhs77_ElementImg = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldUnitySprite>(MetaDefault, new BGId(5517280187927748049UL, 426457773748199303UL), () => _ufle12jhs77_ElementImg = null));
	private static readonly Localization.Factory _factory0_PFS = new Localization.Factory();
	private static readonly Locale.Factory _factory1_PFS = new Locale.Factory();
	private static readonly Yes_No_Master.Factory _factory2_PFS = new Yes_No_Master.Factory();
	private static readonly YES_NO_Evaluation.Factory _factory3_PFS = new YES_NO_Evaluation.Factory();
	private static readonly TarotDecks.Factory _factory4_PFS = new TarotDecks.Factory();
	private static readonly TarotTypeFlows.Factory _factory5_PFS = new TarotTypeFlows.Factory();
	private static readonly ZodiacRoster.Factory _factory6_PFS = new ZodiacRoster.Factory();
	private static readonly ZodiacLabelsContent.Factory _factory7_PFS = new ZodiacLabelsContent.Factory();
	private static readonly ZodiacMiniRoster.Factory _factory8_PFS = new ZodiacMiniRoster.Factory();
	private static readonly Zodiac_to_Tarot.Factory _factory9_PFS = new Zodiac_to_Tarot.Factory();
	private static readonly AnalyticsButtons.Factory _factory10_PFS = new AnalyticsButtons.Factory();
	private static readonly EducationTarotCards.Factory _factory11_PFS = new EducationTarotCards.Factory();
	private static readonly EDU_Feel_Colors.Factory _factory12_PFS = new EDU_Feel_Colors.Factory();
	private static readonly EDU_Astro_Symbols.Factory _factory13_PFS = new EDU_Astro_Symbols.Factory();
	private static readonly EDU_Elements_Symbols.Factory _factory14_PFS = new EDU_Elements_Symbols.Factory();
	private static readonly EDU_TarotCardsGroup.Factory _factory15_PFS = new EDU_TarotCardsGroup.Factory();
	private EDU_Elements_Symbols() : base(MetaDefault)
	{
	}
	private EDU_Elements_Symbols(BGId id) : base(MetaDefault, id)
	{
	}
	private EDU_Elements_Symbols(BGMetaEntity meta) : base(meta)
	{
	}
	private EDU_Elements_Symbols(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static EDU_Elements_Symbols FindEntity(Predicate<EDU_Elements_Symbols> filter)
	{
		return (EDU_Elements_Symbols) MetaDefault.FindEntity(entity => filter==null || filter((EDU_Elements_Symbols) entity));
	}
	public static List<EDU_Elements_Symbols> FindEntities(Predicate<EDU_Elements_Symbols> filter, List<EDU_Elements_Symbols> result=null, Comparison<EDU_Elements_Symbols> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<EDU_Elements_Symbols> action, Predicate<EDU_Elements_Symbols> filter=null, Comparison<EDU_Elements_Symbols> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((EDU_Elements_Symbols) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((EDU_Elements_Symbols) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((EDU_Elements_Symbols)e1,(EDU_Elements_Symbols)e2));
	}
	public static EDU_Elements_Symbols GetEntity(BGId entityId) => (EDU_Elements_Symbols) MetaDefault.GetEntity(entityId);
	public static EDU_Elements_Symbols GetEntity(int index) => (EDU_Elements_Symbols) MetaDefault[index];
	public static EDU_Elements_Symbols GetEntity(string entityName) => (EDU_Elements_Symbols) MetaDefault.GetEntity(entityName);
	public static EDU_Elements_Symbols NewEntity() => (EDU_Elements_Symbols) MetaDefault.NewEntity();
	public static EDU_Elements_Symbols NewEntity(BGId entityId) => (EDU_Elements_Symbols) MetaDefault.NewEntity(entityId);
	public static EDU_Elements_Symbols NewEntity(Action<EDU_Elements_Symbols> callback)
	{
		return (EDU_Elements_Symbols) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((EDU_Elements_Symbols)entity)));
	}
}

public partial class EDU_TarotCardsGroup : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new EDU_TarotCardsGroup(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new EDU_TarotCardsGroup(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5168645041879935703UL,1006579119435350156UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name
	{
		get => _name[Index];
		set => _name[Index] = value;
	}
	public System.String GroupIndex
	{
		get => _GroupIndex[Index];
		set => _GroupIndex[Index] = value;
	}
	public System.String GroupName
	{
		get => _GroupName[Index];
		set => _GroupName[Index] = value;
	}
	public UnityEngine.Sprite GroupImgActive => _GroupImgActive[Index];
	public UnityEngine.Sprite GroupImgInactive => _GroupImgInactive[Index];
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5009554246365771258UL, 2256162043631975600UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_GroupIndex;
	public static BansheeGz.BGDatabase.BGFieldString _GroupIndex => _ufle12jhs77_GroupIndex ?? (_ufle12jhs77_GroupIndex = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5590319675689652291UL, 2545808575730922642UL), () => _ufle12jhs77_GroupIndex = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_GroupName;
	public static BansheeGz.BGDatabase.BGFieldString _GroupName => _ufle12jhs77_GroupName ?? (_ufle12jhs77_GroupName = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4972843091424105805UL, 15196001933430440580UL), () => _ufle12jhs77_GroupName = null));
	private static BansheeGz.BGDatabase.BGFieldUnitySprite _ufle12jhs77_GroupImgActive;
	public static BansheeGz.BGDatabase.BGFieldUnitySprite _GroupImgActive => _ufle12jhs77_GroupImgActive ?? (_ufle12jhs77_GroupImgActive = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldUnitySprite>(MetaDefault, new BGId(4864957342073987559UL, 9671235200402994863UL), () => _ufle12jhs77_GroupImgActive = null));
	private static BansheeGz.BGDatabase.BGFieldUnitySprite _ufle12jhs77_GroupImgInactive;
	public static BansheeGz.BGDatabase.BGFieldUnitySprite _GroupImgInactive => _ufle12jhs77_GroupImgInactive ?? (_ufle12jhs77_GroupImgInactive = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldUnitySprite>(MetaDefault, new BGId(5179955649159041118UL, 16797628426827807648UL), () => _ufle12jhs77_GroupImgInactive = null));
	private static readonly Localization.Factory _factory0_PFS = new Localization.Factory();
	private static readonly Locale.Factory _factory1_PFS = new Locale.Factory();
	private static readonly Yes_No_Master.Factory _factory2_PFS = new Yes_No_Master.Factory();
	private static readonly YES_NO_Evaluation.Factory _factory3_PFS = new YES_NO_Evaluation.Factory();
	private static readonly TarotDecks.Factory _factory4_PFS = new TarotDecks.Factory();
	private static readonly TarotTypeFlows.Factory _factory5_PFS = new TarotTypeFlows.Factory();
	private static readonly ZodiacRoster.Factory _factory6_PFS = new ZodiacRoster.Factory();
	private static readonly ZodiacLabelsContent.Factory _factory7_PFS = new ZodiacLabelsContent.Factory();
	private static readonly ZodiacMiniRoster.Factory _factory8_PFS = new ZodiacMiniRoster.Factory();
	private static readonly Zodiac_to_Tarot.Factory _factory9_PFS = new Zodiac_to_Tarot.Factory();
	private static readonly AnalyticsButtons.Factory _factory10_PFS = new AnalyticsButtons.Factory();
	private static readonly EducationTarotCards.Factory _factory11_PFS = new EducationTarotCards.Factory();
	private static readonly EDU_Feel_Colors.Factory _factory12_PFS = new EDU_Feel_Colors.Factory();
	private static readonly EDU_Astro_Symbols.Factory _factory13_PFS = new EDU_Astro_Symbols.Factory();
	private static readonly EDU_Elements_Symbols.Factory _factory14_PFS = new EDU_Elements_Symbols.Factory();
	private static readonly EDU_TarotCardsGroup.Factory _factory15_PFS = new EDU_TarotCardsGroup.Factory();
	private EDU_TarotCardsGroup() : base(MetaDefault)
	{
	}
	private EDU_TarotCardsGroup(BGId id) : base(MetaDefault, id)
	{
	}
	private EDU_TarotCardsGroup(BGMetaEntity meta) : base(meta)
	{
	}
	private EDU_TarotCardsGroup(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static EDU_TarotCardsGroup FindEntity(Predicate<EDU_TarotCardsGroup> filter)
	{
		return (EDU_TarotCardsGroup) MetaDefault.FindEntity(entity => filter==null || filter((EDU_TarotCardsGroup) entity));
	}
	public static List<EDU_TarotCardsGroup> FindEntities(Predicate<EDU_TarotCardsGroup> filter, List<EDU_TarotCardsGroup> result=null, Comparison<EDU_TarotCardsGroup> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<EDU_TarotCardsGroup> action, Predicate<EDU_TarotCardsGroup> filter=null, Comparison<EDU_TarotCardsGroup> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((EDU_TarotCardsGroup) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((EDU_TarotCardsGroup) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((EDU_TarotCardsGroup)e1,(EDU_TarotCardsGroup)e2));
	}
	public static EDU_TarotCardsGroup GetEntity(BGId entityId) => (EDU_TarotCardsGroup) MetaDefault.GetEntity(entityId);
	public static EDU_TarotCardsGroup GetEntity(int index) => (EDU_TarotCardsGroup) MetaDefault[index];
	public static EDU_TarotCardsGroup GetEntity(string entityName) => (EDU_TarotCardsGroup) MetaDefault.GetEntity(entityName);
	public static EDU_TarotCardsGroup NewEntity() => (EDU_TarotCardsGroup) MetaDefault.NewEntity();
	public static EDU_TarotCardsGroup NewEntity(BGId entityId) => (EDU_TarotCardsGroup) MetaDefault.NewEntity(entityId);
	public static EDU_TarotCardsGroup NewEntity(Action<EDU_TarotCardsGroup> callback)
	{
		return (EDU_TarotCardsGroup) MetaDefault.NewEntity(new BGMetaEntity.NewEntityContext(entity => callback((EDU_TarotCardsGroup)entity)));
	}
}
#pragma warning restore 414
